@startuml
title "クラス図"

class メイン画面 {
  @IBOutlet イメージビュー: UIImageView
  @IBOutlet コレクションビュー: UICollectionView
  @IBOutlet 初期テキストラベル: UILabel
  @IBAction 画像取り込みボタン()
  @IBAction 保存ボタン()
  @IBAction インスタ連携ボタン()
  編集画像設定メソッド()
}

class 編集画面 {
  @IBOutlet 編集ツール用のビュー: UIView
  @IBOutlet 画像表示ビューのframe基準となるビュー: UIView
  編集対象画像: UIImage
  編集機能名: FilterType
  @objc 顔認識・描画モード切り替え時のアクション: (sender: UISegmentedControl)
  @objc スライダアクション(sender: UISlider)
  @objc 完了ボタン()
  @objc キャンセルボタン()
  矩形を表示する()
}

class 顔選択ボタンクラス {
  デリゲート変数
  @objc 顔の矩形ボタンが押されたらオンオフを切り替える()
}

class マスクビュークラス {
  編集モード切り替え(モード: Int)
  顔をマスクする(認識された顔: [CGRect])
  @objc なぞった部分に線を引く(sender: UIPanGestureRecognizer)
}

class 顔認識クラス {
  デリゲート変数
  顔認識を実行(画像: UIImage) -> [CGRect]
}

class デバイスクラス {
  デリゲート変数
  画像を取り込む()
  カメラロールに保存する(画像: UIImage, アラートを返すクロージャ)
  @objc 保存成否アラートの表示(UIImage, NSError, UnsafeMutableRawPointer)
}

class インスタクラス {
  デリゲート変数
  インスタに画像を受け渡す(画像: UIImage)
  @objc 画像のURLを取得しインスタへ遷移()
}

enum フィルタタイプ {
  ぼかし
  モザイク
  モノクロ
  スライダの上限値を返す()
  スライダの下限値を返す()
  スライダの中央値を返す()
  フィルタクラスのインスタンスを返す()
}

enum 画像形式 {
  jpg
  png
  pvt
}

package フィルタ画像生成クラス {
  interface フィルタ {
    process(フィルタパラメータ: CGFloat, 元画像: UIImage) -> UIImage
  }

  class ぼかしクラス {
    元画像からぼかし画像を作る(ぼかし度合い：CGFloat, 元画像: UIImage) -> UIImage
  }

  class モザイククラス {
    元画像からモザイク画像を作る(モザイク度合い：CGFloat, 元画像: UIImage) -> UIImage
  }

  class モノクロクラス {
    元画像からモノクロ画像を作る(モノクロ度合い：CGFloat, 元画像: UIImage) -> UIImage
  }

  フィルタ <|- ぼかしクラス
  フィルタ <|- モザイククラス
  フィルタ <|- モノクロクラス
}
note left of フィルタ画像生成クラス
  フィルタ画像のみを生成、この画像をマスクレイヤと重ねる
end note

メイン画面--編集画面
note left on link
  画像(UIImage)、編集機能名(String)
end note

メイン画面-->デバイスクラス
note left on link
  画像(UIImage)
end note

メイン画面-->インスタクラス
note left on link
  画像(UIImage)
end note

編集画面-->マスクビュークラス
編集画面-->顔認識クラス
顔選択ボタンクラス<--マスクビュークラス

デバイスクラス-->画像形式
メイン画面-->フィルタタイプ
編集画面-->フィルタタイプ
フィルタタイプ-->フィルタ

@enduml
