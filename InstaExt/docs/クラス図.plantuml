@startuml
title "クラス図"

class  メイン画面{
  @IBOutlet イメージビュー: UIImageView
  @IBOutlet コレクションビュー: UICollectionView
  @IBOutlet 初期テキストラベル: UILabel
  @IBAction 画像取り込みボタン()
  @IBAction 保存ボタン()
  @IBAction インスタ連携ボタン()
  編集画像設定メソッド()
}

class  編集画面{
  @IBOutlet 編集画像イメージビュー: UIImageView
  @IBOutlet フィルタ画像イメージビュー: UIImageView
  @IBOutlet 編集ツール用のビュー: UIView
  @IBOutlet 編集ツール用のスライダ: UISlider
  @IBOutlet 顔認識・描画モードの切り替えボタン: UISegmentedControl
  編集対象画像: UIImage
  編集機能名: FilterType
  @IBAction 顔認識・描画モード切り替え時のアクション: (sender: UISegmentedControl)
  @IBAction スライダアクション(sender: UISlider)
  @IBAction 完了ボタン()
  @IBAction キャンセルボタン()
}

class マスクビュークラス{
  @objc なぞった部分に線を引く(sender: UIPanGestureRecognizer)
}

class デバイスクラス{
  デリゲート変数
  画像を取り込む()
  カメラロールに保存する(画像: UIImage, アラートを返すクロージャ)
  @objc 保存成否アラートの表示(UIImage, NSError, UnsafeMutableRawPointer)
}

class インスタクラス{
  デリゲート変数
  インスタに画像を受け渡す(画像: UIImage)
  @objc 画像のURLを取得しインスタへ遷移()
}

enum フィルタタイプ {
  ぼかし
  モザイク
  モノクロ
  スライダの上限値を返す()
  スライダの下限値を返す()
  スライダの中央値を返す()
  フィルタクラスのインスタンスを返す()
}

enum 画像形式 {
  jpg
  png
  pvt
}

package フィルタ画像生成クラス {
class ぼかしクラス{
  元画像からぼかし画像を作る(ぼかし度合い：CGFloat, 元画像: UIImage) -> UIImage
}

class モザイククラス{
  元画像からモザイク画像を作る(モザイク度合い：CGFloat, 元画像: UIImage) -> UIImage
}

class モノクロクラス{
  元画像からモノクロ画像を作る(モノクロ度合い：CGFloat, 元画像: UIImage) -> UIImage
}
}
note bottom
  フィルタ画像のみを生成、この画像をマスクレイヤと重ねる
end note

メイン画面--編集画面
note left on link
  画像(UIImage)、編集機能名(String)
end note

メイン画面--デバイスクラス
note left on link
  画像(UIImage)
end note

メイン画面--インスタクラス
note left on link
  画像(UIImage)
end note

マスクビュークラス--編集画面

編集画面--ぼかしクラス
note left on link
  画像、スライダの値(CGFloat)
end note

編集画面--モザイククラス
note left on link
  画像、スライダの値(CGFloat)
end note

編集画面--モノクロクラス
note left on link
  画像、スライダの値(CGFloat)
end note

デバイスクラス--画像形式
メイン画面--フィルタタイプ
編集画面--フィルタタイプ
ぼかしクラス--フィルタタイプ
モザイククラス--フィルタタイプ
モノクロクラス--フィルタタイプ

@enduml
